version: '3.8'

services:
    auth-service:
        build:
            context: .
            dockerfile: Dockerfile.dev # Use development Dockerfile
        ports:
            - '3000:3000'
        environment:
            - NODE_ENV=development
            - DATABASE_URL=postgresql://postgres:password@postgres:5432/telehealth_auth
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - JWT_SECRET=your-jwt-secret-dev
            - JWT_REFRESH_SECRET=your-refresh-secret-dev
        volumes:
            - .:/app # Mount source code for hot reload
            - /app/node_modules # Exclude node_modules from mount
        depends_on:
            - postgres
            - redis
        networks:
            - telehealth-network

    postgres:
        image: postgres:15-alpine
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=password
            - POSTGRES_DB=telehealth_auth
        ports:
            - '5432:5432'
        volumes:
            - postgres-data:/var/lib/postgresql/data
        networks:
            - telehealth-network
    pgadmin:
        image: dpage/pgadmin4:latest
        container_name: pgadmin4
        ports:
            - '8080:80'
        environment:
            - PGADMIN_DEFAULT_EMAIL=admin@telehealth.com
            - PGADMIN_DEFAULT_PASSWORD=admin123
            - PGADMIN_CONFIG_SERVER_MODE=False
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        depends_on:
            - postgres
        networks:
            - telehealth-network
    redis:
        image: redis:7-alpine
        ports:
            - '6379:6379'
        volumes:
            - redis-data:/data
        command: redis-server --appendonly yes
        networks:
            - telehealth-network

    redis-ui:
        image: rediscommander/redis-commander:latest
        ports:
            - '8081:8081'
        environment:
            - REDIS_HOSTS=local:redis:6379
        depends_on:
            - redis
        networks:
            - telehealth-network

    prometheus:
        image: prom/prometheus:latest
        ports:
            - '9090:9090'
        volumes:
            - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
        networks:
            - telehealth-network

    grafana:
        image: grafana/grafana:latest
        ports:
            - '3002:3000'
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=admin
        volumes:
            - grafana-storage:/var/lib/grafana
        depends_on:
            - prometheus
        networks:
            - telehealth-network

    loki:
        image: grafana/loki:latest
        ports:
            - '3100:3100'
        volumes:
            - ./monitoring/loki.yml:/etc/loki/local-config.yaml
        command: -config.file=/etc/loki/local-config.yaml
        networks:
            - telehealth-network

    promtail:
        image: grafana/promtail:latest
        volumes:
            - ./logs:/var/log
            - ./monitoring/promtail.yml:/etc/promtail/config.yml
        command: -config.file=/etc/promtail/config.yml
        depends_on:
            - loki
        networks:
            - telehealth-network

volumes:
    postgres-data:
    pgadmin-data:
    grafana-storage:
    redis-data:

networks:
    telehealth-network:
        driver: bridge
